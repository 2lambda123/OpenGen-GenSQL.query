<scalar-expr-6> ::= scalar-expr-group | simple-symbol | value | probability-expr | density-expr | mutual-info-expr | approx-mutual-info-expr | search-expr

(* model-expr *)

model-expr ::= '(' ws? model-expr ws? ')'
             | conditioned-by-expr
             | constrained-by-expr
             | simple-symbol
             | incorporate-expr

(* events *)

distribution-event-binop ::= variable ws? binop ws? scalar-expr
                           | scalar-expr ws? binop ws? variable

density-event-eq ::= variable ws? '=' ws? scalar-expr
                   | scalar-expr ws? '=' ws? variable

(* probability-expr *)

probability-expr ::= #'(?i)PROBABILITY' ws #'(?i)OF'
                     ws distribution-event
                     ws #'(?i)UNDER' ws model-expr

density-expr ::= #'(?i)PROBABILITY' ws #'(?i)DENSITY' ws #'(?i)OF'
                 ws density-event
                 ws #'(?i)UNDER' ws model-expr

(* generate-expr *)

<generate-list> ::= star / variable-list

(* mutual-information-expr *)

mutual-info-expr ::= #'(?i)MUTUAL' ws #'(?i)INFORMATION'
                     ws #'(?i)OF' ws distribution-event
                     ws #'(?i)WITH' ws distribution-event
                     ws #'(?i)UNDER' ws model-expr

approx-mutual-info-expr ::= #'(?i)APPROXIMATE' ws #'(?i)MUTUAL' ws #'(?i)INFORMATION'
                            ws #'(?i)OF' ws variable-list
                            ws #'(?i)WITH' ws variable-list
                            ws #'(?i)UNDER' ws model-expr
